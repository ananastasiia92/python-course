# В списке хранятся числа. Нужно выбрать только чётные числа и составить список пар (число; квадрат числа)
# Пример: 1 2 3 5 8 15 23 38
# Получить: [(2, 4), (8, 64), (38, 1444)]
# data = [1, 2, 3, 5, 8, 15, 23, 38]
# res = list()
# for i in data:
#     if i % 2 == 0:
#         res.append ((i, i**2))
# print (res)

def select(f, col):
    return [f(x) for x in col]

def where(f, col):
    return [x for x in col if f(x)]

data = [1, 2, 3, 5, 8, 15, 23, 38]
res = select(int,data)
print(res)

res = where(lambda x: x %2 == 0, res)
print(res)
res = list(select(lambda x: (x, x**2),res))
print(res)

# Файлы
# Файлы в текстовом формате используются для:
# ● Хранения данных
# ● Передачи данных в клиент-серверных проектах
# ● Хранения конфигов
# ● Логирования действий
# Что нужно для работы с файлами:
# 1. Завестипеременную,котораябудетсвязанасэтимтекстовымфайлом. 2. Указатьпутькфайлу.
# 3. Указать,вкакомрежимемыбудемработатьсфайлом.
# Варианты режима (мод):
# 1. a– открытиедлядобавленияданных.
# ○ Позволяет дописывать что-то в имеющийся файл.
# ○ Если вы попробуете дописать что-то в несуществующий файл, то файл
# будет создан и в него начнётся запись. 
# 2. r– открытиедлячтенияданных.
# ○ Позволяет читать данные из файла.
# ○ Если вы попробуете считать данные из файла, которого не существует,
# программа выдаст ошибку. 
# 3. w– открытиедлязаписиданных.
# ○ Позволяет записывать данные и создавать файл, если его не существует.
# Миксованные режимы: 
# 4. w+
# ○ Позволяет открывать файл для записи и читать из него.
# ○ Если файла не существует, он будет создан. 
# 5. r+
# ○ Позволяет открывать файл для чтения и дописывать в него.
# ○ Если файла не существует, программа выдаст ошибку.